/****************************************************************************
   params.hpp - Triceratops parameter manager

   Copyright (C) 2023, AnClark Liu. All rights reserved.

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 3
   of the License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License along
   with this program; if not, write to the Free Software Foundation, Inc.,
   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

*****************************************************************************/

#ifndef TRICERATOPS_PARAMS_HEADER
#define TRICERATOPS_PARAMS_HEADER

enum ParamId {
    TRICERATOPS_MASTER_VOLUME,
    TRICERATOPS_MASTER_TUNE,
    TRICERATOPS_AMP_DRIVE,
    TRICERATOPS_FILTER_MODE,
    TRICERATOPS_CUTOFF,
    TRICERATOPS_RESONANCE,
    TRICERATOPS_FILTER_KEY_FOLLOW,
    TRICERATOPS_LEGATO,
    TRICERATOPS_SYNC,
    TRICERATOPS_WARMTH,
    TRICERATOPS_FM,
    TRICERATOPS_PANIC,

    TRICERATOPS_ACTIVE_ONE,
    TRICERATOPS_VOLUME_ONE,
    TRICERATOPS_PULSEWIDTH_ONE,
    TRICERATOPS_WAVE_ONE,
    TRICERATOPS_OCTAVE_ONE,
    TRICERATOPS_DETUNE_ONE,
    TRICERATOPS_DETUNE_CENTRE_ONE,
    TRICERATOPS_INERTIA_ONE,

    TRICERATOPS_ACTIVE_TWO,
    TRICERATOPS_VOLUME_TWO,
    TRICERATOPS_PULSEWIDTH_TWO,
    TRICERATOPS_WAVE_TWO,
    TRICERATOPS_OCTAVE_TWO,
    TRICERATOPS_DETUNE_TWO,
    TRICERATOPS_DETUNE_CENTRE_TWO,
    TRICERATOPS_INERTIA_TWO,

    TRICERATOPS_ACTIVE_THREE,
    TRICERATOPS_VOLUME_THREE,
    TRICERATOPS_PULSEWIDTH_THREE,
    TRICERATOPS_WAVE_THREE,
    TRICERATOPS_OCTAVE_THREE,
    TRICERATOPS_DETUNE_THREE,
    TRICERATOPS_DETUNE_CENTRE_THREE,
    TRICERATOPS_INERTIA_THREE,

    TRICERATOPS_ATTACK_ONE,
    TRICERATOPS_DECAY_ONE,
    TRICERATOPS_SUSTAIN_ONE,
    TRICERATOPS_RELEASE_ONE,
    TRICERATOPS_ADSR1_ROUTE_ONE,
    TRICERATOPS_ADSR1_ROUTE_ONE_DEST,
    TRICERATOPS_ADSR1_ROUTE_TWO,
    TRICERATOPS_ADSR1_ROUTE_TWO_DEST,

    TRICERATOPS_ATTACK_TWO,
    TRICERATOPS_DECAY_TWO,
    TRICERATOPS_SUSTAIN_TWO,
    TRICERATOPS_RELEASE_TWO,
    TRICERATOPS_ADSR2_ROUTE_ONE,
    TRICERATOPS_ADSR2_ROUTE_ONE_DEST,
    TRICERATOPS_ADSR2_ROUTE_TWO,
    TRICERATOPS_ADSR2_ROUTE_TWO_DEST,

    TRICERATOPS_ATTACK_THREE,
    TRICERATOPS_DECAY_THREE,
    TRICERATOPS_SUSTAIN_THREE,
    TRICERATOPS_RELEASE_THREE,
    TRICERATOPS_ADSR3_LFO1_AMOUNT,
    TRICERATOPS_ADSR3_LFO2_AMOUNT,
    TRICERATOPS_ADSR3_LFO3_AMOUNT,

    TRICERATOPS_LFO1_RETRIG,
    TRICERATOPS_LFO1_SPEED,
    TRICERATOPS_LFO1_WAVE,
    TRICERATOPS_LFO1_DCO1_PITCH,
    TRICERATOPS_LFO1_DCO2_PITCH,
    TRICERATOPS_LFO1_DCO3_PITCH,
    TRICERATOPS_LFO1_FILTER,
    TRICERATOPS_LFO1_ROUTE_ONE,
    TRICERATOPS_LFO1_ROUTE_ONE_DEST,
    TRICERATOPS_LFO1_ROUTE_TWO,
    TRICERATOPS_LFO1_ROUTE_TWO_DEST,

    TRICERATOPS_LFO2_RETRIG,
    TRICERATOPS_LFO2_SPEED,
    TRICERATOPS_LFO2_WAVE,
    TRICERATOPS_LFO2_DCO1_PITCH,
    TRICERATOPS_LFO2_DCO2_PITCH,
    TRICERATOPS_LFO2_DCO3_PITCH,
    TRICERATOPS_LFO2_FILTER,
    TRICERATOPS_LFO2_ROUTE_ONE,
    TRICERATOPS_LFO2_ROUTE_ONE_DEST,
    TRICERATOPS_LFO2_ROUTE_TWO,
    TRICERATOPS_LFO2_ROUTE_TWO_DEST,

    TRICERATOPS_LFO3_RETRIG,
    TRICERATOPS_LFO3_SPEED,
    TRICERATOPS_LFO3_WAVE,
    TRICERATOPS_LFO3_DCO1_PITCH,
    TRICERATOPS_LFO3_DCO2_PITCH,
    TRICERATOPS_LFO3_DCO3_PITCH,
    TRICERATOPS_LFO3_FILTER,
    TRICERATOPS_LFO3_ROUTE_ONE,
    TRICERATOPS_LFO3_ROUTE_ONE_DEST,
    TRICERATOPS_LFO3_ROUTE_TWO,
    TRICERATOPS_LFO3_ROUTE_TWO_DEST,

    TRICERATOPS_FX_ECHO_ACTIVE,
    TRICERATOPS_FX_ECHO_SPEED,
    TRICERATOPS_FX_ECHO_DECAY,
    TRICERATOPS_FX_ECHO_EQ_LOW,
    TRICERATOPS_FX_ECHO_EQ_MID,
    TRICERATOPS_FX_ECHO_EQ_HIGH,

    TRICERATOPS_UNISON_ACTIVATE,
    TRICERATOPS_UNISON_ONE,
    TRICERATOPS_UNISON_TWO,
    TRICERATOPS_UNISON_THREE,

    TRICERATOPS_MODIFIER_DIRT,

    TRICERATOPS_FX_REVERB_ACTIVE,
    TRICERATOPS_FX_REVERB_DECAY,
    TRICERATOPS_FX_REVERB_MIX,

    TRICERATOPS_MODIFIER_STEREO_MODE,
    TRICERATOPS_DCO1_PAN,
    TRICERATOPS_DCO2_PAN,
    TRICERATOPS_DCO3_PAN,
    TRICERATOPS_MODIFIER_RING,

    TRICERATOPS_PRESET_CATEGORY,
    TRICERATOPS_PITCH_BEND_RANGE,
    TRICERATOPS_MIDI_CHANNEL,

    TRICERATOPS_PARAM_COUNT
};

enum ParamType {
    PARAM_FLOAT,
    PARAM_INT,
    PARAM_BOOL
};

struct ParamDefinition {
    const char* symbol;
    const char* name;
    float       min;
    float       max;
    float       def;
    char        type;
};

namespace TriceratopsParam {
    const char* paramName(ParamId index);
    const char* paramSymbol(ParamId index);

    float paramDefaultValue(ParamId index);
    float paramMinValue(ParamId index);
    float paramMaxValue(ParamId index);

    bool paramFloat(ParamId index);
    bool paramBool(ParamId index);
    bool paramInt(ParamId index);
}

#endif // TRICERATOPS_PARAMS_HEADER
